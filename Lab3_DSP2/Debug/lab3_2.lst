TMS320C2000 Assembler Unix v20.2.4 Fri Oct  1 17:33:47 2021

Copyright (c) 1996-2018 Texas Instruments Incorporated
../lab3_2.asm                                                        PAGE    1

       1              ; File for bit banging to LCD
       2              
       3                      .global _c_int00
       4              
       5        7000  WD_Regs         .set 0x7000
       6        0029  WDCR            .set 0x29
       7        0068  WDRC_data       .set 0x68
       8              
       9        7C00  GPIO_CTRL_REGS .set 0x7C00
      10        7C06  GPBMUX1 .set 0x7C06
      11        7C08  GPBMUX2 .set 0x7C08
      12        7C0A  GPBDIR .set 0x7C0A
      13        000C  GPBPUD .set 0x0C
      14              
      15        7F00  GPIO_DATA_REGS .set 0x7F00
      16        0000  GPBDAT_offset .set 0x0
      17              
      18              ;For initial Data with Bit Banging
      19              ; SDA Line is HIGH, GPIO 32 is INPUT
      20              ; SCLK Line is HIGH, GPIO 33 is INPUT
      21              
      22        FFF0  GPBMUX1_data .set ~0x000F ; set everything as GPIO
                FFFF 
      23        FFFC  GPBDIR_data      .set ~0x0003 ; set all as inputs
                FFFF 
      24              
      25 00000000               .data
      26 00000000 0000  test_bit_num .word 0x0
      27 00000001 0000  test_byte       .word 0x0
      28              
      29 00000002 0053  in_string               .word 'S', 'a', 'h', 'i', 'l', ' ', 'A', 'g', 'a', 'r', 'w', 'a', 'l', 0x00
         00000003 0061 
         00000004 0068 
         00000005 0069 
         00000006 006C 
         00000007 0020 
         00000008 0041 
         00000009 0067 
         0000000a 0061 
         0000000b 0072 
         0000000c 0077 
         0000000d 0061 
         0000000e 006C 
         0000000f 0000 
      30              
      31 00000000       counter_delay .usect ".ebss", 2
      32 00000002       counter .usect ".ebss", 1
      33 00000003       counter_string .usect ".ebss", 1
      34              
      35 00000000               .text
      36              
      37 00000000       _c_int00:
      38 00000000 7622          EALLOW
      39              
      40                      ; turn off the watchdog timer
TMS320C2000 Assembler Unix v20.2.4 Fri Oct  1 17:33:47 2021

Copyright (c) 1996-2018 Texas Instruments Incorporated
../lab3_2.asm                                                        PAGE    2

      41 00000001 B9C0          MOVZ DP, #WD_Regs >> 6
      42 00000002 2829          MOV @(WDCR + WD_Regs), #WDRC_data ; turn off watchdog driver
         00000003 0068 
      43              
      44                      ; initialize the stack pointer
      45 00000004 28AD          MOV SP, #0x400
         00000005 0400 
      46              
      47                      ;initialize GPIO
      48 00000006 B9F0          MOVZ DP, #GPBMUX1 >> 6
      49 00000007 1806          AND @(GPBMUX1), #GPBMUX1_data ; set as GPIO
         00000008 FFF0 
      50 00000009 180C          AND @(GPBPUD), #GPBDIR_data ; set pullup
         0000000a FFFC 
      51 0000000b 180A          AND @(GPBDIR), #GPBDIR_data     ; set as INPUT
         0000000c FFFC 
      52              
      53 0000000d 0080'         LC I2C_DELAY
         0000000e 0013 
      54              
      55              
      56 0000000f       LOOP:
      57 0000000f 0080'         LC INIT_LCD
         00000010 00A8 
      58                      ;LC I2C_WRITE_STRING
      59 00000011 6FFE          B LOOP, UNC
      60              
      61 00000012       DONE:
      62 00000012 6F00          B DONE, UNC
      63              
      64              
      65              
      66              ;***********SUBROUTINES************
      67              
      68              ;ROUTINE TO MAKE AN I2C DELAY
      69 00000013       I2C_DELAY:
      70 00000013 B2BD          PUSH XAR1;
      71 00000014 3ABD          PUSH XAR0;
      72 00000015 8D00-         MOVL XAR0, #counter_delay
         00000016 0000 
      73 00000017 8D41          MOVL XAR1, #75000
         00000018 24F8 
      74 00000019 B2C0          MOVL *XAR0, XAR1
      75              
      76 0000001a       LOOP_DELAY:
      77 0000001a 7700          NOP
      78 0000001b 0BC0          DEC *XAR0
      79 0000001c 60FE          B LOOP_DELAY, NEQ
      80 0000001d 8EBE          POP XAR0;
      81 0000001e 8BBE          POP XAR1;
      82 0000001f 7614          LRET
      83              
      84              ;ROUTINE TO SET SCL PIN
      85 00000020       I2C_SET_SCL:
      86 00000020 760B          PUSH DP ; push the DATA Pointer
TMS320C2000 Assembler Unix v20.2.4 Fri Oct  1 17:33:47 2021

Copyright (c) 1996-2018 Texas Instruments Incorporated
../lab3_2.asm                                                        PAGE    3

      87 00000021 B9F0          MOVZ DP, #GPBDIR >> 6 ; set DP to GPIO CTRL REGS
      88 00000022 180A          AND @(GPBDIR), #~0x0002 ; SET SCL to INPUT (HIGH)
         00000023 FFFD 
      89 00000024 7603          POP DP ; POP DP back
      90 00000025 7614          LRET
      91              
      92 00000026       I2C_SET_SDA:
      93 00000026 760B          PUSH DP ; push the DATA Pointer
      94 00000027 B9F0          MOVZ DP, #GPBDIR >> 6  ; set DP to GPIO CTRL REGS
      95 00000028 180A          AND @(GPBDIR), #~0x0001 ; SET SCL to INPUT (HIGH)
         00000029 FFFE 
      96 0000002a 7603          POP DP ; POP DP back
      97 0000002b 7614          LRET
      98              
      99 0000002c       I2C_CLR_SCL:
     100 0000002c 760B          PUSH DP ; push the DATA Pointer
     101 0000002d B9F0          MOVZ DP, #GPBDIR >> 6  ; set DP to GPIO CTRL REGS
     102 0000002e 1A0A          OR @(GPBDIR), #0x02 ; SET SCL to OUTPUT (LOW)
         0000002f 0002 
     103 00000030 7603          POP DP
     104 00000031 7614          LRET
     105              
     106 00000032       I2C_CLR_SDA:
     107 00000032 760B          PUSH DP ; push the DATA Pointer
     108 00000033 B9F0          MOVZ DP, #GPBDIR >> 6  ;set DP to GPIO CTRL REGS
     109 00000034 1A0A          OR @(GPBDIR), #0x0001 ; SET SCL to OUTPUT (LOW)
         00000035 0001 
     110 00000036 7603          POP DP ; POP DP back
     111 00000037 7614          LRET
     112              
     113 00000038       I2C_START:
     114 00000038 0080'         LC I2C_SET_SCL ;SCL HIGH
         00000039 0020 
     115 0000003a 0080'         LC I2C_SET_SDA ; SDA HIGH
         0000003b 0026 
     116 0000003c 0080'         LC I2C_DELAY ; DELAY
         0000003d 0013 
     117 0000003e 0080'         LC I2C_CLR_SDA; SDA goes down first
         0000003f 0032 
     118 00000040 0080'         LC I2C_DELAY ; DELAY
         00000041 0013 
     119 00000042 0080'         LC I2C_CLR_SCL ; SCL goes DOWN
         00000043 002C 
     120 00000044 0080'         LC I2C_DELAY
         00000045 0013 
     121 00000046 7614          LRET
     122              
     123 00000047       I2C_STOP:
     124 00000047 0080'         LC I2C_CLR_SDA
         00000048 0032 
     125 00000049 0080'     LC I2C_DELAY
         0000004a 0013 
     126 0000004b 0080'     LC I2C_SET_SCL
         0000004c 0020 
     127 0000004d 0080'     LC I2C_DELAY
TMS320C2000 Assembler Unix v20.2.4 Fri Oct  1 17:33:47 2021

Copyright (c) 1996-2018 Texas Instruments Incorporated
../lab3_2.asm                                                        PAGE    4

         0000004e 0013 
     128 0000004f 0080'     LC I2C_SET_SDA
         00000050 0026 
     129 00000051 0080'     LC I2C_DELAY
         00000052 0013 
     130 00000053 7614      LRET
     131              
     132              
     133 00000054       I2C_WRITE_1: ; BIT TO WRITE STORED IN STACK modifies XAR7 and AL
     134 00000054 0080'         LC I2C_SET_SDA ; write out a 1
         00000055 0026 
     135 00000056 0080'         LC I2C_DELAY
         00000057 0013 
     136 00000058 0080'     LC I2C_SET_SCL
         00000059 0020 
     137 0000005a 0080'     LC I2C_DELAY
         0000005b 0013 
     138 0000005c 0080'     LC I2C_CLR_SCL
         0000005d 002C 
     139 0000005e 0080'     LC I2C_DELAY
         0000005f 0013 
     140              
     141 00000060 7614      LRET
     142              
     143 00000061       I2C_WRITE_0:
     144 00000061 0080'         LC I2C_CLR_SDA ; write out a 1
         00000062 0032 
     145 00000063 0080'         LC I2C_DELAY
         00000064 0013 
     146 00000065 0080'     LC I2C_SET_SCL
         00000066 0020 
     147 00000067 0080'     LC I2C_DELAY
         00000068 0013 
     148 00000069 0080'     LC I2C_CLR_SCL
         0000006a 002C 
     149 0000006b 0080'     LC I2C_DELAY
         0000006c 0013 
     150 0000006d 7614      LRET
     151              
     152              
     153 0000006e       I2C_READ_BIT: ; leaves what is read in AL
     154 0000006e 760B          PUSH DP
     155 0000006f 1EBD          PUSH ACC
     156 00000070 0080'         LC I2C_SET_SDA
         00000071 0026 
     157 00000072 0080'     LC I2C_DELAY
         00000073 0013 
     158 00000074 0080'     LC I2C_SET_SCL
         00000075 0020 
     159 00000076 0080'     LC I2C_DELAY
         00000077 0013 
     160 00000078 B9FC      MOVZ DP, #GPIO_DATA_REGS >> 6
     161 00000079 CC00      AND AL, @(GPBDAT_offset), #01
         0000007a 0001 
     162 0000007b 58A9      MOVZ AR0, @AL
TMS320C2000 Assembler Unix v20.2.4 Fri Oct  1 17:33:47 2021

Copyright (c) 1996-2018 Texas Instruments Incorporated
../lab3_2.asm                                                        PAGE    5

     163              
     164 0000007c 06BE      POP ACC ; recover ACC
     165 0000007d 7603      POP DP      ; recover DP
     166              
     167              
     168 0000007e C5BE      POP XAR7 ; POP return address
     169 0000007f 3ABD      PUSH XAR0 ; push AR0
     170 00000080 C3BD      PUSH XAR7 ; push return address
     171 00000081 7614      LRET ; return to instruction
     172              
     173 00000082       I2C_WRITE_BYTE:
     174 00000082 C5BE          POP XAR7 ; POP THE RETURN ADDRESS
     175 00000083 C4BE          POP XAR6 ; POP THE BYTE TO BE WRITTEN OUT into XAR6
     176              
     177 00000084 B2BD          PUSH XAR1; save XAR1 and XAR0 incase needed
     178 00000085 3ABD          PUSH XAR0;
     179              
     180 00000086 8D00-         MOVL XAR0, #counter ; start a counter of 8
         00000087 0002 
     181 00000088 D108          MOVL XAR1, #8
     182 00000089 B2C0          MOVL *XAR0, XAR1
     183              
     184 0000008a       WRITE_LOOP:
     185 0000008a 0BC0          DEC *XAR0 ; DEC the counter
     186 0000008b A7C0          MOVAD T, *XAR0 ; MOV the counter value into T
     187 0000008c 06A6          MOVL ACC, @XAR6 ; put the BYTE INTO the ACC
     188 0000008d 5622          LSRL ACC, T ; shift ACC over
     189 0000008e 9001          AND AL, #0x01
     190 0000008f 6107          B WRITE_ZERO, EQ
     191 00000090 0080'         LC I2C_WRITE_1
         00000091 0054 
     192 00000092 1BC0          CMP *XAR0, #0x0
         00000093 0000 
     193 00000094 60F6          B WRITE_LOOP, NEQ
     194 00000095 6F06          B WRITE_DONE, UNC
     195 00000096       WRITE_ZERO:
     196 00000096 0080'         LC I2C_WRITE_0
         00000097 0061 
     197 00000098 1BC0          CMP *XAR0, #0x0
         00000099 0000 
     198 0000009a 60F0          B WRITE_LOOP, NEQ
     199 0000009b       WRITE_DONE:
     200 0000009b 8EBE          POP XAR0
     201 0000009c 8BBE          POP XAR1
     202 0000009d C3BD          PUSH XAR7
     203 0000009e 7614          LRET
     204              
     205 0000009f       WRITE_COMMAND_REG:
     206 0000009f 0080'         LC I2C_START; #START THE I2C transmission
         000000a0 0038 
     207                      ;LC I2C_WRITE_0; RS = 0
     208                      ;LC I2C_WRITE_0; R/W = 0 WRITE
     209 000000a1 8ABE          POP XAR4 ; save the return address
     210 000000a2 0080'         LC I2C_WRITE_BYTE
         000000a3 0082 
TMS320C2000 Assembler Unix v20.2.4 Fri Oct  1 17:33:47 2021

Copyright (c) 1996-2018 Texas Instruments Incorporated
../lab3_2.asm                                                        PAGE    6

     211 000000a4 0080'         LC I2C_STOP
         000000a5 0047 
     212 000000a6 A8BD          PUSH XAR4 ; put return address back
     213 000000a7 7614          LRET
     214              
     215 000000a8       INIT_LCD:
     216                      ; send 0x33
     217 000000a8 BE33          MOVB XAR6, #0x33
     218 000000a9 C2BD          PUSH XAR6
     219 000000aa 0080'         LC WRITE_COMMAND_REG
         000000ab 009F 
     220                      ; send 0x32
     221 000000ac BE32          MOVB XAR6, #0x32
     222 000000ad C2BD          PUSH XAR6
     223 000000ae 0080'         LC WRITE_COMMAND_REG
         000000af 009F 
     224                      ; send 0x28
     225 000000b0 BE28          MOVB XAR6, #0x28
     226 000000b1 C2BD          PUSH XAR6
     227 000000b2 0080'         LC WRITE_COMMAND_REG
         000000b3 009F 
     228                      ; send 0x0F
     229 000000b4 BE0F          MOVB XAR6, #0x0F
     230 000000b5 C2BD          PUSH XAR6
     231 000000b6 0080'         LC WRITE_COMMAND_REG
         000000b7 009F 
     232                      ; send 0x01
     233 000000b8 BE01          MOVB XAR6, #0x01
     234 000000b9 C2BD          PUSH XAR6
     235 000000ba 0080'         LC WRITE_COMMAND_REG
         000000bb 009F 
     236 000000bc 7614          LRET
     237              
     238 000000bd       I2C_WRITE_STRING:
     239 000000bd B2BD          PUSH XAR1;
     240 000000be 3ABD          PUSH XAR0;
     241 000000bf 8D00-         MOVL XAR0, #counter_string
         000000c0 0003 
     242 000000c1 D10D          MOVL XAR1, #13
     243 000000c2 B2C0          MOVL *XAR0, XAR1
     244              
     245 000000c3 8D80"         MOVL XAR2, #in_string
         000000c4 0002 
     246 000000c5       LOOP_STRING:
     247 000000c5 C482          MOVL XAR6 , *XAR2++
     248 000000c6 C2BD          PUSH XAR6
     249 000000c7 0080'         LC I2C_WRITE_1 ; RS
         000000c8 0054 
     250 000000c9 0080'         LC I2C_WRITE_0 ; R/W = 0
         000000ca 0061 
     251 000000cb 0080'         LC I2C_WRITE_BYTE
         000000cc 0082 
     252 000000cd 0BC0          DEC *XAR0
     253 000000ce 60F7          B LOOP_STRING, NEQ
     254 000000cf 0080'         LC I2C_STOP
TMS320C2000 Assembler Unix v20.2.4 Fri Oct  1 17:33:47 2021

Copyright (c) 1996-2018 Texas Instruments Incorporated
../lab3_2.asm                                                        PAGE    7

         000000d0 0047 
     255 000000d1 8EBE          POP XAR0
     256 000000d2 8BBE          POP XAR1
     257 000000d3 7614          LRET
     258              
     259              
     260              
     261              
     262              
     263              
     264              
     265              
     266              
     267              
     268              
     269              
     270              
     271              
     272              
     273              
     274              
     275              
     276              
     277              
     278              
     279              
     280              
     281              
     282              
     283              
     284              
     285              
     286              
     287              
     288              
     289              
     290              
     291              
     292              
     293              
     294              
     295              

No Assembly Errors, No Assembly Warnings
